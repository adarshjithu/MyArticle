"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userServices_1 = require("../Services/userServices");
const userRepository_1 = require("../Repositories/userRepository");
const userControler_1 = require("../Controlers/userControler");
const authMiddleWare_1 = require("../Middleware/authMiddleWare");
const upload_1 = __importDefault(require("../Middleware/upload"));
const userRouter = express_1.default.Router();
const userRepository = new userRepository_1.UserRepository();
const userServices = new userServices_1.UserServices(userRepository);
const controler = new userControler_1.UserControler(userServices);
userRouter.post("/signup", (req, res, next) => { controler.registerUser(req, res, next); });
userRouter.post('/otp/resend', (req, res, next) => controler.resendOtp(req, res, next));
userRouter.post("/otp/submit", (req, res, next) => controler.submitOtp(req, res, next));
userRouter.post("/login", (req, res, next) => controler.loginUser(req, res, next));
userRouter.get("/logout", (req, res, next) => { controler.logoutUser(req, res, next); });
userRouter.get('/profile', authMiddleWare_1.authenticate, (req, res, next) => controler.getProfile(req, res, next));
userRouter.patch("/profile", authMiddleWare_1.authenticate, (req, res, next) => controler.updateProfile(req, res, next));
userRouter.patch("/interests", authMiddleWare_1.authenticate, (req, res, next) => controler.updateArtcles(req, res, next));
userRouter.patch("/password", authMiddleWare_1.authenticate, (req, res, next) => controler.updatePassword(req, res, next));
userRouter.post("/articles", authMiddleWare_1.authenticate, upload_1.default.any(), (req, res, next) => controler.addArticle(req, res, next));
userRouter.put("/articles", authMiddleWare_1.authenticate, upload_1.default.any(), (req, res, next) => controler.updateArticle(req, res, next));
userRouter.get('/article', authMiddleWare_1.authenticate, (req, res, next) => controler.getArticle(req, res, next));
userRouter.delete('/article', authMiddleWare_1.authenticate, (req, res, next) => controler.deleteArticle(req, res, next));
userRouter.get('/articles', authMiddleWare_1.authenticate, (req, res, next) => controler.getAllArticles(req, res, next));
userRouter.get("/article/like", authMiddleWare_1.authenticate, (req, res, next) => controler.likeArticle(req, res, next));
userRouter.get("/article/unlike", authMiddleWare_1.authenticate, (req, res, next) => controler.unlikeArticle(req, res, next));
userRouter.get("/article/block", authMiddleWare_1.authenticate, (req, res, next) => controler.blockArticle(req, res, next));
userRouter.get("/article/:id", authMiddleWare_1.authenticate, (req, res, next) => controler.getSingleArticle(req, res, next));
exports.default = userRouter;
